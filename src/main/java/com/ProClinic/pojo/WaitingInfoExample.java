package com.ProClinic.pojo;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class WaitingInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table waiting_info
     *
     * @mbggenerated Wed Nov 09 23:05:11 CST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table waiting_info
     *
     * @mbggenerated Wed Nov 09 23:05:11 CST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table waiting_info
     *
     * @mbggenerated Wed Nov 09 23:05:11 CST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table waiting_info
     *
     * @mbggenerated Wed Nov 09 23:05:11 CST 2022
     */
    public WaitingInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table waiting_info
     *
     * @mbggenerated Wed Nov 09 23:05:11 CST 2022
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table waiting_info
     *
     * @mbggenerated Wed Nov 09 23:05:11 CST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table waiting_info
     *
     * @mbggenerated Wed Nov 09 23:05:11 CST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table waiting_info
     *
     * @mbggenerated Wed Nov 09 23:05:11 CST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table waiting_info
     *
     * @mbggenerated Wed Nov 09 23:05:11 CST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table waiting_info
     *
     * @mbggenerated Wed Nov 09 23:05:11 CST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table waiting_info
     *
     * @mbggenerated Wed Nov 09 23:05:11 CST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table waiting_info
     *
     * @mbggenerated Wed Nov 09 23:05:11 CST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table waiting_info
     *
     * @mbggenerated Wed Nov 09 23:05:11 CST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table waiting_info
     *
     * @mbggenerated Wed Nov 09 23:05:11 CST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table waiting_info
     *
     * @mbggenerated Wed Nov 09 23:05:11 CST 2022
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andWaitingIdIsNull() {
            addCriterion("waiting_id is null");
            return (Criteria) this;
        }

        public Criteria andWaitingIdIsNotNull() {
            addCriterion("waiting_id is not null");
            return (Criteria) this;
        }

        public Criteria andWaitingIdEqualTo(Integer value) {
            addCriterion("waiting_id =", value, "waitingId");
            return (Criteria) this;
        }

        public Criteria andWaitingIdNotEqualTo(Integer value) {
            addCriterion("waiting_id <>", value, "waitingId");
            return (Criteria) this;
        }

        public Criteria andWaitingIdGreaterThan(Integer value) {
            addCriterion("waiting_id >", value, "waitingId");
            return (Criteria) this;
        }

        public Criteria andWaitingIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("waiting_id >=", value, "waitingId");
            return (Criteria) this;
        }

        public Criteria andWaitingIdLessThan(Integer value) {
            addCriterion("waiting_id <", value, "waitingId");
            return (Criteria) this;
        }

        public Criteria andWaitingIdLessThanOrEqualTo(Integer value) {
            addCriterion("waiting_id <=", value, "waitingId");
            return (Criteria) this;
        }

        public Criteria andWaitingIdIn(List<Integer> values) {
            addCriterion("waiting_id in", values, "waitingId");
            return (Criteria) this;
        }

        public Criteria andWaitingIdNotIn(List<Integer> values) {
            addCriterion("waiting_id not in", values, "waitingId");
            return (Criteria) this;
        }

        public Criteria andWaitingIdBetween(Integer value1, Integer value2) {
            addCriterion("waiting_id between", value1, value2, "waitingId");
            return (Criteria) this;
        }

        public Criteria andWaitingIdNotBetween(Integer value1, Integer value2) {
            addCriterion("waiting_id not between", value1, value2, "waitingId");
            return (Criteria) this;
        }

        public Criteria andWaitingPatientIdIsNull() {
            addCriterion("waiting_patient_id is null");
            return (Criteria) this;
        }

        public Criteria andWaitingPatientIdIsNotNull() {
            addCriterion("waiting_patient_id is not null");
            return (Criteria) this;
        }

        public Criteria andWaitingPatientIdEqualTo(Integer value) {
            addCriterion("waiting_patient_id =", value, "waitingPatientId");
            return (Criteria) this;
        }

        public Criteria andWaitingPatientIdNotEqualTo(Integer value) {
            addCriterion("waiting_patient_id <>", value, "waitingPatientId");
            return (Criteria) this;
        }

        public Criteria andWaitingPatientIdGreaterThan(Integer value) {
            addCriterion("waiting_patient_id >", value, "waitingPatientId");
            return (Criteria) this;
        }

        public Criteria andWaitingPatientIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("waiting_patient_id >=", value, "waitingPatientId");
            return (Criteria) this;
        }

        public Criteria andWaitingPatientIdLessThan(Integer value) {
            addCriterion("waiting_patient_id <", value, "waitingPatientId");
            return (Criteria) this;
        }

        public Criteria andWaitingPatientIdLessThanOrEqualTo(Integer value) {
            addCriterion("waiting_patient_id <=", value, "waitingPatientId");
            return (Criteria) this;
        }

        public Criteria andWaitingPatientIdIn(List<Integer> values) {
            addCriterion("waiting_patient_id in", values, "waitingPatientId");
            return (Criteria) this;
        }

        public Criteria andWaitingPatientIdNotIn(List<Integer> values) {
            addCriterion("waiting_patient_id not in", values, "waitingPatientId");
            return (Criteria) this;
        }

        public Criteria andWaitingPatientIdBetween(Integer value1, Integer value2) {
            addCriterion("waiting_patient_id between", value1, value2, "waitingPatientId");
            return (Criteria) this;
        }

        public Criteria andWaitingPatientIdNotBetween(Integer value1, Integer value2) {
            addCriterion("waiting_patient_id not between", value1, value2, "waitingPatientId");
            return (Criteria) this;
        }

        public Criteria andWaitingDoctorIdIsNull() {
            addCriterion("waiting_doctor_id is null");
            return (Criteria) this;
        }

        public Criteria andWaitingDoctorIdIsNotNull() {
            addCriterion("waiting_doctor_id is not null");
            return (Criteria) this;
        }

        public Criteria andWaitingDoctorIdEqualTo(Integer value) {
            addCriterion("waiting_doctor_id =", value, "waitingDoctorId");
            return (Criteria) this;
        }

        public Criteria andWaitingDoctorIdNotEqualTo(Integer value) {
            addCriterion("waiting_doctor_id <>", value, "waitingDoctorId");
            return (Criteria) this;
        }

        public Criteria andWaitingDoctorIdGreaterThan(Integer value) {
            addCriterion("waiting_doctor_id >", value, "waitingDoctorId");
            return (Criteria) this;
        }

        public Criteria andWaitingDoctorIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("waiting_doctor_id >=", value, "waitingDoctorId");
            return (Criteria) this;
        }

        public Criteria andWaitingDoctorIdLessThan(Integer value) {
            addCriterion("waiting_doctor_id <", value, "waitingDoctorId");
            return (Criteria) this;
        }

        public Criteria andWaitingDoctorIdLessThanOrEqualTo(Integer value) {
            addCriterion("waiting_doctor_id <=", value, "waitingDoctorId");
            return (Criteria) this;
        }

        public Criteria andWaitingDoctorIdIn(List<Integer> values) {
            addCriterion("waiting_doctor_id in", values, "waitingDoctorId");
            return (Criteria) this;
        }

        public Criteria andWaitingDoctorIdNotIn(List<Integer> values) {
            addCriterion("waiting_doctor_id not in", values, "waitingDoctorId");
            return (Criteria) this;
        }

        public Criteria andWaitingDoctorIdBetween(Integer value1, Integer value2) {
            addCriterion("waiting_doctor_id between", value1, value2, "waitingDoctorId");
            return (Criteria) this;
        }

        public Criteria andWaitingDoctorIdNotBetween(Integer value1, Integer value2) {
            addCriterion("waiting_doctor_id not between", value1, value2, "waitingDoctorId");
            return (Criteria) this;
        }

        public Criteria andWaitingStatusIsNull() {
            addCriterion("waiting_status is null");
            return (Criteria) this;
        }

        public Criteria andWaitingStatusIsNotNull() {
            addCriterion("waiting_status is not null");
            return (Criteria) this;
        }

        public Criteria andWaitingStatusEqualTo(Integer value) {
            addCriterion("waiting_status =", value, "waitingStatus");
            return (Criteria) this;
        }

        public Criteria andWaitingStatusNotEqualTo(Integer value) {
            addCriterion("waiting_status <>", value, "waitingStatus");
            return (Criteria) this;
        }

        public Criteria andWaitingStatusGreaterThan(Integer value) {
            addCriterion("waiting_status >", value, "waitingStatus");
            return (Criteria) this;
        }

        public Criteria andWaitingStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("waiting_status >=", value, "waitingStatus");
            return (Criteria) this;
        }

        public Criteria andWaitingStatusLessThan(Integer value) {
            addCriterion("waiting_status <", value, "waitingStatus");
            return (Criteria) this;
        }

        public Criteria andWaitingStatusLessThanOrEqualTo(Integer value) {
            addCriterion("waiting_status <=", value, "waitingStatus");
            return (Criteria) this;
        }

        public Criteria andWaitingStatusIn(List<Integer> values) {
            addCriterion("waiting_status in", values, "waitingStatus");
            return (Criteria) this;
        }

        public Criteria andWaitingStatusNotIn(List<Integer> values) {
            addCriterion("waiting_status not in", values, "waitingStatus");
            return (Criteria) this;
        }

        public Criteria andWaitingStatusBetween(Integer value1, Integer value2) {
            addCriterion("waiting_status between", value1, value2, "waitingStatus");
            return (Criteria) this;
        }

        public Criteria andWaitingStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("waiting_status not between", value1, value2, "waitingStatus");
            return (Criteria) this;
        }

        public Criteria andWaitingUpdateIsNull() {
            addCriterion("waiting_update is null");
            return (Criteria) this;
        }

        public Criteria andWaitingUpdateIsNotNull() {
            addCriterion("waiting_update is not null");
            return (Criteria) this;
        }

        public Criteria andWaitingUpdateEqualTo(Date value) {
            addCriterion("waiting_update =", value, "waitingUpdate");
            return (Criteria) this;
        }

        public Criteria andWaitingUpdateNotEqualTo(Date value) {
            addCriterion("waiting_update <>", value, "waitingUpdate");
            return (Criteria) this;
        }

        public Criteria andWaitingUpdateGreaterThan(Date value) {
            addCriterion("waiting_update >", value, "waitingUpdate");
            return (Criteria) this;
        }

        public Criteria andWaitingUpdateGreaterThanOrEqualTo(Date value) {
            addCriterion("waiting_update >=", value, "waitingUpdate");
            return (Criteria) this;
        }

        public Criteria andWaitingUpdateLessThan(Date value) {
            addCriterion("waiting_update <", value, "waitingUpdate");
            return (Criteria) this;
        }

        public Criteria andWaitingUpdateLessThanOrEqualTo(Date value) {
            addCriterion("waiting_update <=", value, "waitingUpdate");
            return (Criteria) this;
        }

        public Criteria andWaitingUpdateIn(List<Date> values) {
            addCriterion("waiting_update in", values, "waitingUpdate");
            return (Criteria) this;
        }

        public Criteria andWaitingUpdateNotIn(List<Date> values) {
            addCriterion("waiting_update not in", values, "waitingUpdate");
            return (Criteria) this;
        }

        public Criteria andWaitingUpdateBetween(Date value1, Date value2) {
            addCriterion("waiting_update between", value1, value2, "waitingUpdate");
            return (Criteria) this;
        }

        public Criteria andWaitingUpdateNotBetween(Date value1, Date value2) {
            addCriterion("waiting_update not between", value1, value2, "waitingUpdate");
            return (Criteria) this;
        }

        public Criteria andWaitingCostIsNull() {
            addCriterion("waiting_cost is null");
            return (Criteria) this;
        }

        public Criteria andWaitingCostIsNotNull() {
            addCriterion("waiting_cost is not null");
            return (Criteria) this;
        }

        public Criteria andWaitingCostEqualTo(BigDecimal value) {
            addCriterion("waiting_cost =", value, "waitingCost");
            return (Criteria) this;
        }

        public Criteria andWaitingCostNotEqualTo(BigDecimal value) {
            addCriterion("waiting_cost <>", value, "waitingCost");
            return (Criteria) this;
        }

        public Criteria andWaitingCostGreaterThan(BigDecimal value) {
            addCriterion("waiting_cost >", value, "waitingCost");
            return (Criteria) this;
        }

        public Criteria andWaitingCostGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("waiting_cost >=", value, "waitingCost");
            return (Criteria) this;
        }

        public Criteria andWaitingCostLessThan(BigDecimal value) {
            addCriterion("waiting_cost <", value, "waitingCost");
            return (Criteria) this;
        }

        public Criteria andWaitingCostLessThanOrEqualTo(BigDecimal value) {
            addCriterion("waiting_cost <=", value, "waitingCost");
            return (Criteria) this;
        }

        public Criteria andWaitingCostIn(List<BigDecimal> values) {
            addCriterion("waiting_cost in", values, "waitingCost");
            return (Criteria) this;
        }

        public Criteria andWaitingCostNotIn(List<BigDecimal> values) {
            addCriterion("waiting_cost not in", values, "waitingCost");
            return (Criteria) this;
        }

        public Criteria andWaitingCostBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("waiting_cost between", value1, value2, "waitingCost");
            return (Criteria) this;
        }

        public Criteria andWaitingCostNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("waiting_cost not between", value1, value2, "waitingCost");
            return (Criteria) this;
        }

        public Criteria andWaitingDiscountIsNull() {
            addCriterion("waiting_discount is null");
            return (Criteria) this;
        }

        public Criteria andWaitingDiscountIsNotNull() {
            addCriterion("waiting_discount is not null");
            return (Criteria) this;
        }

        public Criteria andWaitingDiscountEqualTo(Float value) {
            addCriterion("waiting_discount =", value, "waitingDiscount");
            return (Criteria) this;
        }

        public Criteria andWaitingDiscountNotEqualTo(Float value) {
            addCriterion("waiting_discount <>", value, "waitingDiscount");
            return (Criteria) this;
        }

        public Criteria andWaitingDiscountGreaterThan(Float value) {
            addCriterion("waiting_discount >", value, "waitingDiscount");
            return (Criteria) this;
        }

        public Criteria andWaitingDiscountGreaterThanOrEqualTo(Float value) {
            addCriterion("waiting_discount >=", value, "waitingDiscount");
            return (Criteria) this;
        }

        public Criteria andWaitingDiscountLessThan(Float value) {
            addCriterion("waiting_discount <", value, "waitingDiscount");
            return (Criteria) this;
        }

        public Criteria andWaitingDiscountLessThanOrEqualTo(Float value) {
            addCriterion("waiting_discount <=", value, "waitingDiscount");
            return (Criteria) this;
        }

        public Criteria andWaitingDiscountIn(List<Float> values) {
            addCriterion("waiting_discount in", values, "waitingDiscount");
            return (Criteria) this;
        }

        public Criteria andWaitingDiscountNotIn(List<Float> values) {
            addCriterion("waiting_discount not in", values, "waitingDiscount");
            return (Criteria) this;
        }

        public Criteria andWaitingDiscountBetween(Float value1, Float value2) {
            addCriterion("waiting_discount between", value1, value2, "waitingDiscount");
            return (Criteria) this;
        }

        public Criteria andWaitingDiscountNotBetween(Float value1, Float value2) {
            addCriterion("waiting_discount not between", value1, value2, "waitingDiscount");
            return (Criteria) this;
        }

        public Criteria andWaitingDateIsNull() {
            addCriterion("waiting_date is null");
            return (Criteria) this;
        }

        public Criteria andWaitingDateIsNotNull() {
            addCriterion("waiting_date is not null");
            return (Criteria) this;
        }

        public Criteria andWaitingDateEqualTo(Date value) {
            addCriterionForJDBCDate("waiting_date =", value, "waitingDate");
            return (Criteria) this;
        }

        public Criteria andWaitingDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("waiting_date <>", value, "waitingDate");
            return (Criteria) this;
        }

        public Criteria andWaitingDateGreaterThan(Date value) {
            addCriterionForJDBCDate("waiting_date >", value, "waitingDate");
            return (Criteria) this;
        }

        public Criteria andWaitingDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("waiting_date >=", value, "waitingDate");
            return (Criteria) this;
        }

        public Criteria andWaitingDateLessThan(Date value) {
            addCriterionForJDBCDate("waiting_date <", value, "waitingDate");
            return (Criteria) this;
        }

        public Criteria andWaitingDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("waiting_date <=", value, "waitingDate");
            return (Criteria) this;
        }

        public Criteria andWaitingDateIn(List<Date> values) {
            addCriterionForJDBCDate("waiting_date in", values, "waitingDate");
            return (Criteria) this;
        }

        public Criteria andWaitingDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("waiting_date not in", values, "waitingDate");
            return (Criteria) this;
        }

        public Criteria andWaitingDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("waiting_date between", value1, value2, "waitingDate");
            return (Criteria) this;
        }

        public Criteria andWaitingDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("waiting_date not between", value1, value2, "waitingDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table waiting_info
     *
     * @mbggenerated do_not_delete_during_merge Wed Nov 09 23:05:11 CST 2022
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table waiting_info
     *
     * @mbggenerated Wed Nov 09 23:05:11 CST 2022
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}